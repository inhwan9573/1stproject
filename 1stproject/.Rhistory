knitr::opts_chunk$set(warning=FALSE, message=FALSE)
# 6,7,8월만 추출하기
library(DT)
jja <- data.frame()
for (i in seq(1989, 2018, 1)) {
june <- data[grep(paste0(i, ".06"),data$기간),]
july <- data[grep(paste0(i, ".07"),data$기간),]
august <- data[grep(paste0(i, ".08"),data$기간),]
jja <- rbind(jja, june, july, august)
}
# 라이브러리 불러오기
library(tidyverse)
# 전체 데이터 불러오기
data <- read.csv("./data/seoulsi.csv")
# 6,7,8월만 추출하기
library(DT)
jja <- data.frame()
for (i in seq(1989, 2018, 1)) {
june <- data[grep(paste0(i, ".06"),data$기간),]
july <- data[grep(paste0(i, ".07"),data$기간),]
august <- data[grep(paste0(i, ".08"),data$기간),]
jja <- rbind(jja, june, july, august)
}
jja <- jja[,-c(2)]
colnames(jja) <- c("연도","평균기온","평균최고기온","극점최고기온",
"평균최저기온","극점최저기온","강수량",
"평균습도","최소습도","평균해면기압",
"이슬점온도","평균운량","일조시간",
"평균풍속","최대풍속")
# 변수 수치화(reshape)
jja$강수량 <- as.numeric(jja$강수량)
jja$이슬점온도 <- as.numeric(jja$이슬점온도)
# 데이터 요약하기
summer_df <- jja %>%
group_by(substr(연도,1,4)) %>%
summarise(여름평균기온=round(mean(평균기온),digit=3),
여름평균최고기온=round(mean(평균최고기온),digit=3),
여름극점최고기온평균=round(mean(극점최고기온),digit=3),
여름극점최고기온=round(max(극점최고기온),digit=3),
여름평균최저기온=round(mean(평균최저기온),digit=3),
여름극점최저기온평균=round(mean(극점최저기온),digit=3),
여름극점최저기온=round(min(극점최저기온),digit=3),
여름강수량=round(mean(강수량),digit=3),
여름평균습도=round(mean(평균습도),digit=3),
여름최소습도=round(mean(최소습도),digit=3),
여름평균해면기압=round(mean(평균해면기압),digit=3),
여름이슬점온도=round(mean(이슬점온도),digit=3),
여름평균운량=round(mean(평균운량),digit=3),
여름일조시간=round(mean(일조시간),digit=3),
여름평균풍속=round(mean(평균풍속),digit=3),
여름최대풍속=round(mean(최대풍속),digit=3))
names(summer_df)[names(summer_df) == "substr(연도, 1, 4)"] <- c('year')
# 열지수 데이터 만들기
heatdata <- read.csv("./data/dataheatindex.csv")
heat_df <- heatdata %>%
group_by(year) %>%
summarise(열지수=round(mean(heatindex),digit=3),
최대열지수=max(heatindex))
# 변수 합치고 확인하기
summer <- cbind(summer_df,heat_df[2:3])
datatable(summer,
caption = "여름철 기상데이터",
filter="top")
read.csv(".\\data\\dataheatindex.csv")
read.csv(".\data\dataheatindex.csv")
read.csv(".\data\dataheatindex.csv",header=TRUE)
read.csv(".\\data\\dataheatindex.csv",header=TRUE)
read.csv("./data/dataheatindex.csv",header=TRUE)
data.frame(
name=c(ryan,apeach,neo,prodo,muzi)
age=c(10,12,13,13,5)
apecies=c(lion,peach,cat,dog,danmuzi)
)
data.frame(
name=character()
age=numeric()
apecies=character())
data.frame(
name=character()
age=numeric()
species=character())
df <- data.frame(
name=character()
age=numeric()
species=character())
df <- data.frame(
name=character()
age=numeric()
species=character()
)
df <- data.frame(
name=character()
age=numeric()
species=character()
)
df <- data.frame(
name=character(),
age=numeric(),
species=character()
)
df[1,] <- c('ryan','apeach','neo','prodo','muzi')
df[,1] <- c('ryan','apeach','neo','prodo','muzi')
df[,1] <- c('ryan','apeach','neo','prodo','muzi')
df[,1:5] <- c('ryan','apeach','neo','prodo','muzi')
df <- data.frame(
name=character(),
age=numeric(10,12,13,13,5),
species=character())
df[1,1:5] <- c('ryan','apeach','neo','prodo','muzi')
df[2,1;5] <- c(10,12,13,13,5)
df[2,1:5] <- c(10,12,13,13,5)
df[3,1:5] <- c('lion','peach','cat','dog','danmuzi')
df
df <- data.frame(
name=character(),
age=numeric(),
species=character())
df$name <- c('ryan','apeach','neo','prodo','muzi')
df$age <- c(10,12,13,13,5)
name <- c('ryan','apeach','neo','prodo','muzi')
age <- c(10,12,13,13,5)
species <- c('lion','peach','cat','dog','danmuzi')
df <- data.frame(name,age,specis,stringsAsFactors = F)
df <- data.frame(name,age,species,stringsAsFactors = F)
df[df$age>=12]
df[df$age>=12,]
subset(df,select=(age>=12))
?subset
string <- c('apple','pineapple','APPLE','PINEAPPLE')
string1 <- grep('apple',string)
string2 <- grep('apple',string,ignore.case = T)
string1
string2
grep('pine',string)
li <- list(number=c(1,2,3,4),
character=c('a','b','c','d'),
na=c(NA,NA,NA,NA))
class(li[1])
class(li[2])
class(li[3])
matrix(1:9,nrow=3,Bycol=True)
matrix(1:9,nrow=3, byrow = =True)
matrix(1:9,nrow=3, byrow =TRUE)
matrix(1:9,nrow=3, bycol =TRUE)
matrix(1:9,nrow=3, bycol =TRUE)
matrix(1:9,nrow=3, byrow=F)
matrix(1:9,nrow=3)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
# 라이브러리 불러오기
library(tidyverse)
# 라이브러리 불러오기
library(tidyverse)
# 라이브러리 불러오기
library(tidyverse)
# 라이브러리 불러오기
library(tidyverse)
# 라이브러리 불러오기
library(tidyverse)
install.packages('stringi)
# 라이브러리 불러오기
library(tidyverse)
install.packages('stringi')
install.packages('stringi')
# 라이브러리 불러오기
library(tidyverse)
install.packages('stringi')
# 라이브러리 불러오기
library(tidyverse)
getwd()
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
# 라이브러리 불러오기
library(tidyverse)
# 라이브러리 불러오기
remove.packages('tidyverse')
# 라이브러리 불러오기
install.packages('tidyverse')
# 라이브러리 불러오기
library(tidyverse)
# 라이브러리 불러오기
install.packages('tidyverse')
library(readxl)
library(tidyverse)
install.packages('stringi')
library(tidyverse)
# 라이브러리 불러오기
library(tidyverse)
# 전체 데이터 불러오기
data <- read.csv("./data/seoulsi.csv")
plot(winter_df~summer)
# 6,7,8월만 추출하기
library(DT)
jja <- data.frame()
for (i in seq(1989, 2018, 1)) {
june <- data[grep(paste0(i, ".06"),data$기간),]
july <- data[grep(paste0(i, ".07"),data$기간),]
august <- data[grep(paste0(i, ".08"),data$기간),]
jja <- rbind(jja, june, july, august)
}
jja <- jja[,-c(2)]
colnames(jja) <- c("연도","평균기온","평균최고기온","극점최고기온",
"평균최저기온","극점최저기온","강수량",
"평균습도","최소습도","평균해면기압",
"이슬점온도","평균운량","일조시간",
"평균풍속","최대풍속")
# 변수 수치화(reshape)
jja$강수량 <- as.numeric(jja$강수량)
jja$이슬점온도 <- as.numeric(jja$이슬점온도)
# 데이터 요약하기
summer_df <- jja %>%
group_by(substr(연도,1,4)) %>%
summarise(여름평균기온=round(mean(평균기온),digit=3),
여름평균최고기온=round(mean(평균최고기온),digit=3),
여름극점최고기온평균=round(mean(극점최고기온),digit=3),
여름극점최고기온=round(max(극점최고기온),digit=3),
여름평균최저기온=round(mean(평균최저기온),digit=3),
여름극점최저기온평균=round(mean(극점최저기온),digit=3),
여름극점최저기온=round(min(극점최저기온),digit=3),
여름강수량=round(mean(강수량),digit=3),
여름평균습도=round(mean(평균습도),digit=3),
여름최소습도=round(mean(최소습도),digit=3),
여름평균해면기압=round(mean(평균해면기압),digit=3),
여름이슬점온도=round(mean(이슬점온도),digit=3),
여름평균운량=round(mean(평균운량),digit=3),
여름일조시간=round(mean(일조시간),digit=3),
여름평균풍속=round(mean(평균풍속),digit=3),
여름최대풍속=round(mean(최대풍속),digit=3))
names(summer_df)[names(summer_df) == "substr(연도, 1, 4)"] <- c('year')
# 열지수 데이터 만들기
heatdata <- read.csv("./data/dataheatindex.csv")
heat_df <- heatdata %>%
group_by(year) %>%
summarise(열지수=round(mean(heatindex),digit=3),
최대열지수=max(heatindex))
# 변수 합치고 확인하기
summer <- cbind(summer_df,heat_df[2:3])
datatable(summer,
caption = "여름철 기상데이터",
filter="top")
djf <- data.frame()
for (i in seq(1989, 2019, 1)) {
december <- data[grep(paste0(i, ".12"),data$기간),]
january <- data[grep(paste0(i+1, ".01"),data$기간),]
febrary <- data[grep(paste0(i+1, ".02"),data$기간),]
group <- rbind(december,january,febrary)
djf <- rbind(djf,group)
}
year <- data.frame(rep(1989:2018, each=3),stringsAsFactors = FALSE)
djf <- cbind(djf,year)
djf <- djf[,-c(2)]
colnames(djf) <- c("연도","평균기온","평균최고기온","극점최고기온",
"평균최저기온","극점최저기온","강수량",
"평균습도","최소습도","평균해면기압",
"이슬점온도","평균운량","일조시간",
"평균풍속","최대풍속","year")
# 데이터 요약하기
winter_df <- djf %>%
group_by(year) %>%
summarise(겨울평균기온=round(mean(평균기온),3),
겨울평균최고기온=round(mean(평균최고기온),3),
겨울극점최고기온평균=round(mean(극점최고기온),3),
겨울극점최고기온=round(max(극점최고기온),3),
겨울평균최저기온=round(mean(평균최저기온),3),
겨울극점최저기온평균=round(mean(극점최저기온),3),
겨울극점최저기온=round(min(극점최저기온),3))
winter <- winter_df
datatable(winter,
caption = "겨울철 기상데이터",
filter="top")
winter$year <- as.character(winter$year)
summer_winter_df <- left_join(summer,winter)
datatable(summer_winter_df,
caption = "여름철-겨울철 기상데이터",
filter="top")
scale_df <- as.data.frame(scale(summer_winter_df[2:26]))
# 7개로 나누기
summer_winter_average <- scale_df[,-c(20:25)]
# 겨울 평균기온과 비교(19)
summer_winter_average_max <- scale_df[,-c(19,21:25)]
# 겨울 평균최고기온과 비교(20)
summer_winter_average_pole_max <- scale_df[,-c(19:20,22:25)]
# 겨울 극점최고기온평균과 비교(21)
summer_winter_pole_max <- scale_df[,-c(19:21,23:25)]
# 겨울 극점최고기온과 비교(22)
summer_winter_average_min <- scale_df[,-c(19:22,24:25)]
# 겨울 평균최저기온과 비교(23)
summer_winter_average_pole_min <- scale_df[,-c(19:23,25)]
# 겨울 극점최저기온평균과 비교(24)
summer_winter_pole_min <- scale_df[,-c(19:24)]
# 겨울 극점최저기온과 비교(25)
library(hrbrthemes)
plot(winter_df~summer)
View(winter_df)
View(summer)
plot(winter_df$겨울평균기온~summer$여름평균기온)
cov(winter_df$겨울평균기온~summer$여름평균기온)
cor(winter_df$겨울평균기온~summer$여름평균기온)
cor(winter_df[,1:2]~summer[,1:2])
cor(winter_df[,1:2],summer[,1:2])
winter_df$겨울평균기온,summer$여름평균기온
cor(winter_df$겨울평균기온,summer$여름평균기온)
cov(winter_df$겨울평균기온,summer$여름평균기온)
plot(winter_df$겨울평균기온~summer$여름평균기온)
cov(winter_df$겨울평균기온,summer$여름평균기온)
cor(winter_df$겨울평균기온,summer$여름평균기온)
#겨울평균기온
avg_winter_average <- (sum(as.numeric(winter_df$겨울평균기온))/30)
winter_df %>%
ggplot(aes(x=year, y=겨울평균기온, group=1)) +
geom_line(color="blue") +
geom_point(shape=25, color="black", fill="blue", size=5) +
theme_ipsum() +
geom_hline(yintercept = avg_winter_average, linetype = 2, color = "grey35", size = 1) +
labs(title = "서울시 겨울(12월-2월) 평균기온",
subtitle = "1998 - 2018",
x = "연도",
y = "기온") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5 ))
?plot
?plot
plot(winter_df$겨울평균기온~summer$여름평균기온)
cov(winter_df$겨울평균기온,summer$여름평균기온)
cor(winter_df$겨울평균기온,summer$여름평균기온)
plot(winter_df$겨울평균기온~summer$여름평균기온,
xlab='여름평균기온',ylab='겨울평균기온')
abline(lm(winter_df$겨울평균기온~summer$여름평균기온))
?plot
plot(winter_df$겨울평균기온~summer$여름평균기온,
xlab='여름평균기온',ylab='겨울평균기온')
abline(lm(winter_df$겨울평균기온~summer$여름평균기온))
cov(winter_df$겨울평균기온,summer$여름평균기온)
cor(winter_df$겨울평균기온,summer$여름평균기온)
lm(winter_df$겨울평균기온~summer$여름평균기온
lm(winter_df$겨울평균기온~summer$여름평균기온)
plot(winter_df$겨울평균기온~summer$여름평균기온,
xlab='여름평균기온',ylab='겨울평균기온')
abline(lm(winter_df$겨울평균기온~summer$여름평균기온))
plot(winter_df$겨울평균기온~summer$여름평균기온,
xlab='여름평균기온',ylab='겨울평균기온')
abline(lm(winter_df$겨울평균기온~summer$여름평균기온))
cor(winter_df$겨울평균기온,summer$여름평균기온)
cor(winter_df$겨울평균최저기온,summer$여름평균최고기온)
cor(winter_df$겨울평균최저기온,summer$여름평균최고기온)
avg_summer_average_max <- (sum(as.numeric(summer$여름평균최고기온))/30)
summer %>%
ggplot(aes(x=year, y=여름평균최고기온, group=1)) +
geom_line(color="red") +
geom_point(shape=24, color="black", fill="red", size=5) +
theme_ipsum() +
geom_hline(yintercept = avg_summer_average_max, linetype = 2, color = "grey35", size = 1) +
labs(title = "서울시 여름(6월-8월) 평균최고기온",
subtitle = "1998 - 2018",
x = "연도",
y = "기온") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5 ))
#겨울평균최저기온
avg_winter_average_max <- (sum(as.numeric(winter_df$겨울평균최저기온))/30)
winter_df %>%
ggplot(aes(x=year, y=겨울평균최저기온, group=1)) +
geom_line(color="blue") +
geom_point(shape=25, color="black", fill="blue", size=5) +
theme_ipsum() +
geom_hline(yintercept = avg_winter_average_max, linetype = 2, color = "grey35", size = 1) +
labs(title = "서울시 겨울(12월-2월) 평균최저기온",
subtitle = "1998 - 2018",
x = "연도",
y = "기온") + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5 ))
plot(winter_df$겨울평균기온~summer$여름평균기온,
xlab='여름평균기온',ylab='겨울평균기온')
abline(lm(winter_df$겨울평균기온~summer$여름평균기온))
cor(winter_df$겨울평균기온,summer$여름평균기온)
plot(winter_df$겨울평균최저기온~summer$여름평균최고기온,
xlab='여름평균최고기온',ylab='겨울평균최저기온')
abline(lm(winter_df$겨울평균최저기온~summer$여름평균최고기온))
cor(winter_df$겨울평균최저기온,summer$여름평균최고기온)
library(gridExtra)
# 한파, 폭염 데이터 가져오기
heatdata <- read_csv("./data/heatwave.csv")
colddata <- read.csv("./data/coldwave_NSW.csv")
# 폭염 6월 7월 8월 데이터 추출
heatwavedata <- heatdata %>% filter(str_sub(time, 6, 7) == '06' | str_sub(time, 6, 7) == '07' | str_sub(time, 6, 7) == '08')
#폭염 년도 묶음, 갯수 세기
heatwavedata1 <- heatwavedata %>% group_by(str_sub(time, 1, 4)) %>% summarise(count = n())
heatwavedata1 <- rename(heatwavedata1, year='str_sub(time, 1, 4)')
#폭염 중간값
meanheat <- heatwavedata1 %>% summarise(mean(count))
meanheat <- as.numeric(meanheat)
#한파
coldwavedata <- colddata %>% group_by(str_sub(Year, 1, 4)) %>% summarise(count = n())
coldwavedata1 <- rename(coldwavedata, year='str_sub(Year, 1, 4)')
# 한파 중간값
meancold <- coldwavedata1 %>% summarise(mean(count))
meancold <- as.numeric(meancold)
# 폭염, 한파 데이터 합치기
heatcolddata <- merge(heatwavedata1, coldwavedata1, by = "year", all=T)
heatcolddata <- rename(heatcolddata, heatcount = count.x, coldcount = count.y)
heatcolddata <- heatcolddata %>% mutate(sum = heatcount + coldcount)
#데이터 그리기
# 폭염 데이터
heatgplot <-heatcolddata %>% ggplot(aes(x=year, y = heatcount)) +
geom_bar(stat="identity",fill="#FF3300", width = 0.2) +
xlab("연도") + ylab("횟수") + ggtitle("폭염")
# 한파 데이터
coldgplot <- heatcolddata %>% ggplot(aes(x=year, y = coldcount)) +
geom_bar(stat="identity", fill="#3399FF",width = 0.2) +
xlab("연도") + ylab("횟수") + scale_y_reverse() + ggtitle("한파")
grid.arrange(heatgplot, coldgplot, top = "연도별 폭염,한파 발생 횟수")
plot(heatcolddata$coldcount~heatcolddata$heatcount,
xlab='폭염특보 개수',ylab='한파특보 개수')
abline(lm(heatcolddata$coldcount,heatcolddata$heatcount))
plot(heatcolddata$coldcount~heatcolddata$heatcount,
xlab='폭염특보 개수',ylab='한파특보 개수')
abline(lm(heatcolddata$coldcount,heatcolddata$heatcount))
plot(heatcolddata$coldcount~heatcolddata$heatcount,
xlab='폭염특보 개수',ylab='한파특보 개수')
abline(lm(heatcolddata$coldcount~heatcolddata$heatcount))
cor(heatcolddata$coldcount,heatcolddata$heatcount)
library(plotly)
library(hrbrthemes)
library(readxl)
library(tidyverse)
library(gridExtra)
library(grid)
#열지수, 체감온도 데이터 불러오기
dataheatindex <- read.csv("./data/heatindex_S.csv")
datawindchill <- read.csv("data/windchill_NW.csv")
#열지수 데이터
dataheatindex$date <- as.character(dataheatindex$date)
dataheatindex <- mutate(dataheatindex,'year'= str_sub(date,1,4))
heatindexdata <- dataheatindex %>%
select(year,heatindex) %>%
filter(heatindex >= 32) %>%
group_by(year) %>%
summarise(n = n())
heatindexdata <- rename(heatindexdata, year=year, countheat = n)
#체감온도 데이터
datawindchill$date <- as.character(datawindchill$date)
datawindchill <- mutate(datawindchill,'year'= str_sub(date,1,4))
windchilldata <- datawindchill %>%
select(year, windchill) %>%
filter (windchill < -10.5) %>%
group_by(year) %>%
summarise(n = n())
windchilldata <- rename(windchilldata, year=year, countchill = n)
#열지수, 체감온도 데이터 합치기
alldata <- merge(heatindexdata, windchilldata, by="year")
#결측값 0으로 만들기
alldata$countheat[is.na(alldata$countheat)] <- 0
alldata$countchill[is.na(alldata$countchill)] <- 0
# 시각화
p1 <-alldata %>% ggplot() +
geom_bar(aes(x=year, y = countheat),stat="identity",fill="#FF3300", width = 0.2) +
xlab("연도") + ylab("횟수")+
labs(title = "열지수 32 이상인 날", x="연도", y="횟수")+
theme_minimal() +
theme(
title = element_text(family= "Malgun Gothic",size=10),
plot.title = element_text(family= "Malgun Gothic",size=10,hjust=0.5)
)
# 한파 데이터
p2 <- alldata %>% ggplot() +
geom_bar(aes(x=year, y = countchill),stat="identity", fill="#3399FF",width = 0.2) +
xlab("연도") + ylab("횟수") + scale_y_reverse()+
labs(title = "체감온도 -10.5 이하인 날")+
theme_minimal() +
theme(　　　　　　　　
title = element_text(family= "Malgun Gothic",size=10),
plot.title = element_text(family= "Malgun Gothic",size=10, hjust=0.5)
)
hiwc <- grid.arrange(p1, p2,
top = textGrob("연도별 열지수와 체감온도 비교",gp=gpar(fontsize=15)))
plot(alldata$countchill~alldata$countheat,
xlab='체감온도 -10.5 이하인 날',ylab='열지수 32 이상인 날')
abline(lm(alldata$countchill~alldata$countheat))
cor(alldata$countchill,alldata$countheat)
plot(heatcolddata$coldcount~heatcolddata$heatcount,
xlab='폭염특보 개수',ylab='한파특보 개수')
abline(lm(heatcolddata$coldcount~heatcolddata$heatcount))
cor(heatcolddata$coldcount,heatcolddata$heatcount)
